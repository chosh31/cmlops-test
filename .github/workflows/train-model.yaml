name: train-model-command
on:
  repository_dispatch:
    types: [train-model-command]
jobs:
  prepare:
    if: github.event.client_payload.slash_command.args.named.model
    runs-on: ubuntu-latest
    steps:
      - name: Prepared
        run: |
          echo "Target model: ${{ github.event.client_payload.slash_command.args.named.model }}"
  trainModel:
    needs: prepare
    runs-on: ubuntu-latest
    container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    defaults:
      run:
        # TODO
        working-directory: ./models/${{ github.event.client_payload.slash_command.args.named.model }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.pull_request.head.ref }}
          fetch-depth: 0
      # may need to setup NodeJS & Python3 on e.g. self-hosted
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '12'
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'
      - uses: iterative/setup-cml@v1
      - name: Pip requirement
        run: |
          pip uninstall protobuf python3-protobuf
          pip install --upgrade pip
          pip install --upgrade protobuf

          pip install -r requirements.txt
      - name: Train model
        run: |
          python train.py
      - name: Write CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.ACC_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SEC_ID }}
        run: |
          python evaluate.py

          echo "## Model Metrics" >> report.md
          dvc metrics diff HEAD --show-md >> report.md

          echo "## Data" >> report.md
          cml-publish cnf_matrix.png --md >> report.md
          
          echo "github: ${{ github }}"
          echo "sha: ${{ github.event.pull_request.head.sha || github.sha }}"
          cml-send-comment --commit-sha=${{ github.event.pull_request.head.sha || github.sha }} report.md
  output:
    needs: trainModel
    runs-on: ubuntu-latest
    steps:
      - name: Create URL to the run output
        id: vars
        run: |
          echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          echo ::set-output name=report-url::https://github.com/$GITHUB_REPOSITORY/commit/${{ github.event.pull_request.head.sha || github.sha }}
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            [Model report output][1]
            [Github action run output][2]

            [1]: ${{ steps.vars.outputs.report-url }}
            [2]: ${{ steps.vars.outputs.run-url }}
